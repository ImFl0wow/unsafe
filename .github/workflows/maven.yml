# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  android:
    timeout-minutes: 30
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt-hotspot'
          cache: maven
      - name: Build with Maven
        run: mvn -B install --file pom.xml
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt-hotspot'
          cache: maven
      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: cd unsafe-android-integration-tests && chmod +x ./gradlew && ./gradlew cAT
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: robinraju/release-downloader@v1.6
        with:
          repository: "sniffy/archived-jdks"
          tag: "jdk-1_5_0_22-linux-i586.bin"
          fileName: "jdk-1_5_0_22-linux-i586.bin"
      - name: install lib32z1
        run: sudo apt-get install -y lib32z1
      - name: install JDK
        run: chmod +x ./jdk-1_5_0_22-linux-i586.bin && yes | ./jdk-1_5_0_22-linux-i586.bin
      - name: list files
        run: ls -la
      - name: Java 5 version
        run: ./jdk1.5.0_22/bin/java -version

      - uses: robinraju/release-downloader@v1.6
        with:
          repository: "sniffy/archived-jdks"
          tag: "jdk-1_2_2_017-linux-i586.tar.gz"
          fileName: "jdk-1_2_2_017-linux-i586.tar.gz"
      - name: install JDK
        run: tar -xzvf jdk-1_2_2_017-linux-i586.tar.gz
      - name: Patch 1
        run: sed -i 's/ia32/ia32 | ia64 | i?86/g' ./jdk1.2.2/bin/.java_wrapper
      - name: Patch 1
        run: sed -i 's/unset jre/echo $JREHOME $proc /g' ./jdk1.2.2/bin/.java_wrapper
      - name: Patch 2
        run: sed -i 's/ia32/ia32 | ia64 | i?86/g' ./jdk1.2.2/jre/bin/.java_wrapper
      - name: Patch 3
        run: sed -i 's/ia32/ia32 | ia64 | i?86/g' ./jdk1.2.2/jre/bin/realpath
      - name: install lib32z1
        run: sudo apt-get install gcc-multilib
      - name: Java 2 version
        run: ./jdk1.2.2/bin/java -version

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B test --file pom.xml -Djdk5.home=./jdk1.5.0_22
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B test --file pom.xml
      - name: Set up JDK 8 J9
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt-openj9'
          cache: maven
      - name: Build with Maven
        run: mvn -B test --file pom.xml
      - name: Set up JDK EA
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: EA
      - name: Build with Maven
        run: mvn -B test --file pom.xml

      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Example step
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          gu --version
          native-image --version
      - name: Build with Maven
        run: mvn -B test --file pom.xml

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
